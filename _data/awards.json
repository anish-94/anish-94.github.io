[
  {
      "title": "Plankton CNN",
      "tag": "plankton-cnn",
      "date": "2/2019 - Present",
      "image": "/images/plankton.png",
      "code": "https://github.com/PavementPrometheus/Street-Watch",
      "demo": "NONE",
      "report": "NONE",
      "description": "",
      "tools": [
          {
              "tool": "Keras",
              "tag": "keras"
          },
          {
              "tool": "OpenCV",
              "tag": "opencv"
          },
          {
              "tool": "TensorFlow",
              "tag": "tensorflow"
          }
      ],
      "accomplishments": [
          {
              "statement": "Designing the entire pipeline of the system, building the computer vision models, communicating with Dr. Li and our technical advisor from Georgia Tech, Chanho Kim, and assigning tasks and responsibilities to my teammates."
          },
          {
              "statement": "Worked on building a real-time object detection demo for our presentation to the City of Portland Representative and Dr. Li, setting up CARLA, a simulation tool, and collecting more than 2,000 images from Portland's surveillance cameras as our test dataset for our demo."
          }
      ]
  },
  {
    "title": "Senior Design Project",
    "tag": "senior-design-project",
    "date": "10/2018 - Present",
    "image": "/images/pedestrian-counting-and-privacy-preservation.jpg",
    "code": "https://github.com/PavementPrometheus/Street-Watch",
    "demo": "NONE",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "PyTorch",
        "tag": "pytorch"
      },
      {
        "tool": "OpenCV",
        "tag": "opencv"
      },
      {
        "tool": "Node.js",
        "tag": "nodejs"
      }
    ],
    "accomplishments": [
      {
        "statement": "Designing the entire pipeline of the system, building the computer vision models, communicating with Dr. Li and our technical advisor from Georgia Tech, Chanho Kim, and assigning tasks and responsibilities to my teammates."
      },
      {
        "statement": "Worked on building a real-time object detection demo for our presentation to the City of Portland Representative and Dr. Li, setting up CARLA, a simulation tool, and collecting more than 2,000 images from Portland's surveillance cameras as our test dataset for our demo."
      }
    ]
  },
  {
    "title": "Tech Data AI Demo",
    "tag": "ai-demo",
    "date": "11/2018 - Present",
    "image": "/images/ai-demo.png",
    "code": "NONE",
    "demo": "http://techdata.cgrb.oregonstate.edu/access/",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "Bootstrap",
        "tag": "bootstrap"
      },
      {
        "tool": "jQuery",
        "tag": "jquery"
      },
      {
        "tool": "Node.js",
        "tag": "nodejs"
      },
      {
        "tool": "Bash",
        "tag": "bash"
      }
    ],
    "accomplishments": [
      {
        "statement": "..."
      },
      {
        "statement": "..."
      },
      {
        "statement": "..."
      }
    ]
  },
  {
    "title": "Exploring Robot",
    "tag": "exploring-robot",
    "date": "11/2018",
    "image": "/images/exploring-robot.png",
    "code": "https://github.com/madebymaze/exploring-robot",
    "demo": "NONE",
    "report": "/pdf/exploring-robot.pdf",
    "description": "",
    "tools": [
      {
        "tool": "Python",
        "tag": "pytorch"
      },
      {
        "tool": "C++",
        "tag": "cplusplus"
      },
      {
        "tool": "ROS",
        "tag": "ros"
      }
    ],
    "accomplishments": [
      {
        "statement": "Designed an exploration package utilizing the gmapping and nav bundle packages to allow a simulated robot to explore an unknown environment."
      },
      {
        "statement": "Designed an algorithm that generates waypoints to be followed and each waypoint is weighted based on a convolutional filter with some weighted conditions."
      },
      {
        "statement": "Worked with a team to build the project and counter occuring bugs that is related to ROS nodes behavior and the selection of waypoints to follow."
      }
    ]
  },
  {
    "title": "Image Captioning",
    "tag": "image-captioning",
    "date": "7/2018 - 8/2018",
    "image": "/images/no-image.jpg",
    "code": "https://github.com/madebymaze/image-captioning",
    "demo": "NONE",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "PyTorch",
        "tag": "pytorch"
      },
      {
        "tool": "OpenCV",
        "tag": "opencv"
      }
    ],
    "accomplishments": [
      {
        "statement": "Built a Convolutions Neural Network-Recurrence Neural Network (CNN-RNN) model to automat- ically generate captions from images using NumPy, OpenCV, and PyTorch."
      },
      {
        "statement": "Trained the CNN-RNN model on MS COCO dateset that takes any image and automatically generate captions that describes the image with a probability score of likelihoods of accuracy."
      },
      {
        "statement": "Trained the Encoder[CNN] for feature extracting and trained the Decoder[Long Short-Term Memory (LSTM) cells in RNN ] to generate captions."
      }
    ]
  },
  {
    "title": "Facial Keypoint Detection",
    "tag": "facial-keypoint-detection",
    "date": "6/2018 - 7/2018",
    "image": "/images/no-image.jpg",
    "code": "https://github.com/madebymaze/facial-keypoint-detection",
    "demo": "NONE",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "PyTorch",
        "tag": "pytorch"
      },
      {
        "tool": "OpenCV",
        "tag": "opencv"
      }
    ],
    "accomplishments": [
      {
        "statement": "Built a CNN model to predict Facial Keypoints using NumPy, OpenCV, and PyTorch."
      },
      {
        "statement": "Trained the CNN model to detect faces and predicts 68 distinguishing keypoints on that face."
      },
      {
        "statement": "Pre-processed input images to the CNN model from noises for training using Modern Computer Vision Techniques."
      }
    ]
  },
  {
    "title": "Self-Driving RC Car",
    "tag": "self-driving-RC-car",
    "date": "5/2018 - 8/2018",
    "image": "/images/self-driving-RC-car.jpg",
    "code": "https://github.com/OSUmlaiclub/SelfDrivingRCCar/tree/mazen",
    "demo": "NONE",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "Python",
        "tag": "python"
      },
      {
        "tool": "Node.js",
        "tag": "nodejs"
      },
      {
        "tool": "JavaScript",
        "tag": "js"
      },
      {
        "tool": "C",
        "tag": "c"
      }
    ],
    "accomplishments": [
      {
        "statement": "Wrote a web app that streams a live-feed and a controller to control an RC Car’s controller, Raspberry Pi, using Node.js, JavaScript, and Python."
      },
      {
        "statement": "Researched and cleaned a set of datasets in a cloud-server to be used to train the machine learning model."
      },
      {
        "statement": "Built the structure of the intelligent agent and machine learning model."
      }
    ]
  },
  {
    "title": "Image Classification",
    "tag": "image-classification",
    "date": "5/2018",
    "image": "/images/no-image.jpg",
    "code": "https://github.com/madebymaze/image-classification",
    "demo": "NONE",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "PyTorch",
        "tag": "pytorch"
      },
      {
        "tool": "NumPy",
        "tag": "numpy"
      }
    ],
    "accomplishments": [
      {
        "statement": "Wrote an Multiple Layer Neural Networks (MLP) that classifies images using NumPy and PyTorch."
      },
      {
        "statement": "Trained the MLP model using CIFAR-10 dataset."
      },
      {
        "statement": "Documented and reported the MLP’s accuracy and results using LATEX."
      }
    ]
  },
  {
    "title": "Aces Up Game",
    "tag": "aces-up-game",
    "date": "11/2017 - 12/2017",
    "image": "/images/aceuposu.png",
    "code": "https://github.com/madebymaze/aces-up-game",
    "demo": "https://aceuposu.herokuapp.com/",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "jQuery",
        "tag": "jquery"
      },
      {
        "tool": "Java",
        "tag": "java"
      }
    ],
    "accomplishments": [
      {
        "statement": "Wrote a web app with a team using Java Ninja framework for back-end, JavaScript for front-end, and Heroku and GitHub to host the web app."
      },
      {
        "statement": "Built interactive animations and a tracking system using JavaScript."
      },
      {
        "statement": "Won the Best Web Application for Software Engineering I (CS-361)."
      }
    ]
  },
  {
    "title": "Personal Website",
    "tag": "personal-website",
    "date": "12/2016",
    "image": "/images/personal-website.png",
    "code": "https://github.com/madebymaze/personal-website",
    "demo": "https://madebymaze.xyz/",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "JavaScript",
        "tag": "js"
      },
      {
        "tool": "jQuery",
        "tag": "jquery"
      },
      {
        "tool": "Node.js",
        "tag": "nodejs"
      },
      {
        "tool": "NGINX",
        "tag": "nginx"
      }
    ],
    "accomplishments": [
      {
        "statement": "Wrote a personal website using Node.js for back-end and JavaScript for front-end."
      },
      {
        "statement": "Hosted my website on virtual machine (DigitalOcean)."
      },
      {
        "statement": "Wrote a NGINX script that directs HTTP requests to HTTPS and maps networks."
      }
    ]
  },
  {
    "title": "A.I. for a 2D Grid Game",
    "tag": "ai-agent-2d",
    "date": "4/2016",
    "image": "/images/no-image.jpg",
    "code": "https://github.com/madebymaze/ai-agent-2d",
    "demo": "NONE",
    "report": "NONE",
    "description": "",
    "tools": [
      {
        "tool": "C++",
        "tag": "cplusplus"
      }
    ],
    "accomplishments": [
      {
        "statement": "Wrote a 2D grid game, Hunt the Wumpus, with a dynamic grid size using C++."
      },
      {
        "statement": "Wrote an embedded intelligent agent, inspired by Minesweepers, to solve the game using Probability Distribution Methods."
      },
      {
        "statement": "Acquired code organization skills by modularizing my programs and defining appropriate classes."
      }
    ]
  }
]